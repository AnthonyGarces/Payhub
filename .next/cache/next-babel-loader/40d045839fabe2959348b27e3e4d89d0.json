{"ast":null,"code":"'use strict';\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _citation = _interopRequireDefault(require(\"./citation\"));\n\nvar _expense = _interopRequireDefault(require(\"./expense\"));\n\nvar _timeCard = _interopRequireDefault(require(\"./timeCard\"));\n\nvar _ptoRequest = _interopRequireDefault(require(\"./ptoRequest\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Sequelize = require('sequelize');\n\nconst env = \"development\" || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nconst db = {\n  user: (0, _user.default)(sequelize, Sequelize),\n  timeCard: (0, _timeCard.default)(sequelize, Sequelize)\n};\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;","map":{"version":3,"sources":["C:/Users/antho/ClassStuff/HW/Projects/project3/payhub/models/index.js"],"names":["Sequelize","require","env","config","__dirname","sequelize","use_env_variable","process","database","username","password","db","user","timeCard","Object","keys","forEach","modelName","associate","module","exports"],"mappings":"AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,GAAG,GAAG,iBAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,SAAS,GAAG,wBAAb,CAAP,CAA8CF,GAA9C,CAAf;;AACA,IAAIG,SAAJ;;AACA,IAAIF,MAAM,CAACG,gBAAX,EAA6B;AACzBD,EAAAA,SAAS,GAAG,IAAIL,SAAJ,CAAcO,OAAO,CAACL,GAAR,CAAYC,MAAM,CAACG,gBAAnB,CAAd,EAAoDH,MAApD,CAAZ;AACH,CAFD,MAEO;AACHE,EAAAA,SAAS,GAAG,IAAIL,SAAJ,CAAcG,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACH;;AACD,MAAMQ,EAAE,GAAG;AACPC,EAAAA,IAAI,EAAE,mBAAKP,SAAL,EAAgBL,SAAhB,CADC;AAEPa,EAAAA,QAAQ,EAAE,uBAASR,SAAT,EAAoBL,SAApB;AAFH,CAAX;AAIAc,MAAM,CAACC,IAAP,CAAYJ,EAAZ,EAAgBK,OAAhB,CAAwBC,SAAS,IAAI;AACjC,MAAIN,EAAE,CAACM,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AACzBP,IAAAA,EAAE,CAACM,SAAD,CAAF,CAAcC,SAAd,CAAwBP,EAAxB;AACH;AACJ,CAJD;AAKAA,EAAE,CAACN,SAAH,GAAeA,SAAf;AACAM,EAAE,CAACX,SAAH,GAAeA,SAAf;AACAmB,MAAM,CAACC,OAAP,GAAiBT,EAAjB","sourcesContent":["'use strict';\nimport user from './user';\nimport citation from './citation';\nimport expense from './expense';\nimport timeCard from './timeCard';\nimport ptoRequest from './ptoRequest';\nconst Sequelize = require('sequelize');\n\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nlet sequelize;\nif (config.use_env_variable) {\n    sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n    sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\nconst db = {\n    user: user(sequelize, Sequelize),\n    timeCard: timeCard(sequelize, Sequelize)\n};\nObject.keys(db).forEach(modelName => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;"]},"metadata":{},"sourceType":"script"}